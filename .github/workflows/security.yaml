name: Security

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run weekly security audit on Sundays at 2:00 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  audit:
    name: Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v5

      - name: Setup
        uses: ./.github/actions/setup

      - name: Audit dependencies
        run: |
          echo "::group::Security Audit"
          # Check for high/critical vulnerabilities and fail if found
          pnpm audit --audit-level high
          echo "âœ… No high or critical vulnerabilities found"
          echo "::endgroup::"

  supply-chain:
    name: Supply Chain Security
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v5

      - name: Setup
        uses: ./.github/actions/setup

      - name: Build Package
        uses: ./.github/actions/build-package

      - name: Check package integrity
        run: |
          echo "::group::Package Integrity Check"
          # Verify package can be packed and unpacked correctly
          pnpm pack --pack-destination /tmp
          cd /tmp && tar -tf *.tgz > /tmp/package-contents.txt

          # Verify expected files are present
          if ! grep -q "dist/" /tmp/package-contents.txt; then
            echo "::error::Missing dist/ directory in package"
            exit 1
          fi

          if ! grep -q "package/package.json" /tmp/package-contents.txt; then
            echo "::error::Missing package.json in package"
            exit 1
          fi
          echo "::endgroup::"

      - name: Validate package exports
        run: |
          echo "::group::Export Validation"
          pnpm check-exports
          echo "::endgroup::"

  secrets-scan:
    name: Secrets Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Run TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || '' }}
          head: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || '' }}
          extra_args: --debug --only-verified --token=${{ secrets.GITHUB_TOKEN }}
